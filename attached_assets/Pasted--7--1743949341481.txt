
7. עמוד חדשים ופופולרים/הרשימה שלי
●בכל אחד מהעמודים תהיה כותרת ראשית בלבן, העיצוב בדיוק כמו הטקסט של ה-cover
photo בדף הבית
●בכל שורה יוצגו כמה תוכניות שנכנסות מבחינת הגודל והשאר ימשיכו לשורה הבאה.
כל עוד יש פריטים - תתמלא השורה הבאה עד סוף העמוד שהמשתמש רואה.
לאחר מכן אם המשתמש יגלול, יתווספו בכל פעם עוד תוכניות, עד סוף הרשימה.
●בקצרה, נראה תוכניות חדשות בגלילה, עד שיגמרו התוכניות ונראה את הפוטר בתחתית
העמוד.
15
8. עמוד חיפוש
●ממשו את העמוד הזה לפי 3 קריטריונים לבחירתכם, למשל חיפוש לפי קטגוריה, שפת דיבור,
שפת כתוביות, לאלו גילאים…
16
* ביצוע החישובים
●הכי חדש - חישוב לפי זמן העלאה/הוספה לשרתי נטפליקס
●הכי פופולרי - שקיבל את הציון הכי גבוה
●הכי נצפות - שהכי הרבה משתמשים הזינו לו review
●נתינת ביקורת - כתיבת review ו/או סימון מספר כוכבים
את הנתונים יש לקחת מ-API חיצוני וחינמי של סרטים וסדרות, ולהשלים את הנתונים החסרים
בעזרת דטבייס משלכם, במונגו.
הנתונים יגיעו משני המקומות ביחד ויהיו עקביים., כלומר אם נשמור את המשך המידע בדטבייס
שלנו, המידע ישוייך תמיד לאותו המידע המגיע ממקור חיצוני ולכן יש לזהותו.
17
צד השרת - API
●השרת שלנו יתמוך ב-CRUD של reviews, של משתמשים ושל תוכניות )=סרטים וסדרות(
●יש לבנות את ה-API לפי חוקי RESTful API שנלמדו בקורס
●אין צורך לפבלש בפוסטמן, אבל מומלץ לעבוד עם פוסטמן במהלך הפיתוח
18
צד השרת - דטבייס
●הדטבייס בקורס הוא MongoDB ואנחנו משתמשים ב-Mongoose כ-ODM.
●יש להגדיר סכמה ומודל לכל אובייקט שנעבוד איתו
●בכל חשבון יש כמה משתמשים
●לכל תוכנית יש הרבה מדרגים
●נשתמש באגרגציות בשביל חישוב התוכניות להצגה בדף הבית/דף סרטים/דף תוכניות
למשל: 10 התוכניות הכי פופולריות היום
19
צד הלקוח - ריאקט
●צד הלקוח יכתב בריאקט, קבצי jsx ויועלה ל-Netlify.
●תהיה חשיבה על מבנה הקומפוננטות, ניהול states, העברת props
●react hooks-וב functional components-נשתמש רק ב
●במידת הצורך, נעדיף session storage ולא local storage
●במידת הצורך, ניתן להשתמש ב-cookie בכניסה למערכת
●העיצוב יהיה תואם לקובץ Figma במכשיר הראשי
●שני המכשירים הנוספים יהיו רספונסיביים ולא ישברו, עיצוב לשיקולכם, כל עוד נראה תקין
20
מנהל המערכת
●מנהל המערכת יכול לראות לוגים של המערכת בכניסה לראוט מסויים, מסודרים מהתאריך
הכי חדש אל התאריך הכי ישן
●למנהל המערכת יש דף ובו יכול להכניס תכנית חדשה )סרט או סידרה(
הפרטים בטופס להכנסה יהיו לפי הקיים בעיצוב ולפי הקיים ב-API החיצוני בו תשתמשו
העיצוב יהיה בדומה לעיצוב שקיים בפיגמה, לשיקולכם.
21
הקלות למתכנת יחיד
●אין צורך לממש את הלוגים במערכת )למנהל מערכת(
●בחירה לחישוב 4 מתוך 8 השורות שבדף הבית/דף הסרטים/דף סדרות
●בעמוד תכנית אין צורך להציג פרטים לסדרות אלא מבנה זהה לסרט ולסידרה
●אין צורך לממש את עמוד החיפוש
22
AI
הסבר "חישוב התאמות בעזרת אלגוריתם בינה מלאכותית כלשהו"
יש לחפש מודול/ספריה/חבילה מוכן/ה לאלגוריתם בינה מלאכותית שבהינתן נתונים יכול
להמליץ ולהחזיר לנו נתונים אחרים.
יש לקרוא את הדוקומנטציה ולהבין האם תואם לצרכי הפרוייקט ואם כן איך ניתן להשתמש בו.
אפשר להשתמש בספריה גנרית או לחפש ספריה שמותאמת לסרטים ולסדרות.
אין לממש אלגוריתם לבד.
אין חשיבות לטיב/יעילות האלגוריתם, כל עוד הספריה מבצעת את הנדרש.
23
